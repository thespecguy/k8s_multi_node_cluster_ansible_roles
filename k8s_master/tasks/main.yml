---
# tasks file for k8s_master
- name: Docker Installation
  package:
    name: docker
    state: present

- name: Starting Docker Service
  service:
    name: docker
    state: started
    enabled: yes

- name: Kubernetes Repo Creation
  yum_repository:
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    name: kubernetes
    description: kubernetes
    enabled: true
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude:
      - kubelet
      - kubeadm
      - kubectl
  register: indicator

- name: Installation of kubeadm, kubelet and kubectl
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    disable_excludes: kubernetes
    state: present

- name: Starting kubelet Service
  service:
    name: kubelet
    state: started
    enabled: yes

- name: Pulling required images using kubeadm
  command: "kubeadm config images pull"

- name: Configuring Docker Cgroup
  template:
    src: k8s_master/templates/daemon.json
    dest: /etc/docker/daemon.json

- name: Restarting Docker Service
  service:
    name: docker
    state: restarted
    enabled: yes

- name: Installation of iproute-tc
  yum:
    name: iproute-tc
    state: present

- name: Copying k8s.conf to /etc/sysctl.d
  copy:
    src: k8s_master/files/k8s.conf
    dest: /etc/sysctl.d/k8s.conf
  register: sysctl_status
      
- name: Reading values from all the system directories
  command: "sysctl --system"
  when: sysctl_status.changed != false

- name: Initializing k8s control plane
  shell: 'kubeadm init --pod-network-cidr="{{ pod_network_cidr }}" --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem'
  when: indicator.changed != false

- name: Creating .kube directory
  file:
    path: $HOME/.kube
    state: directory
  register: directory_status

- name: Copying admin credentials to config file in .kube directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes

- name: Obtaining User ID
  command: "id -un"
  register: user

- name: Obtaining Group ID
  command: "id -ng"
  register: group

- name: Changing the file ownership of config file in .kube directory
  file:
    path: $HOME/.kube/config
    owner: "{{ user.stdout }}"
    group: "{{ group.stdout }}"

- name: Clearing RAM Memory Cache, Buffer and Swap Space
  command: "echo 3 > /proc/sys/vm/drop_caches"

- name: Flannel Setup
  command: "kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  
- name: Generating token for establishing connectivity between master and worker node
  command: "kubeadm token create  --print-join-command"
  register: token

- name: Generation of dummy host to pass the token to the worker nodes
  add_host:
    name: "Token_Pass_Host"
    token_pass: "{{ token }}"
